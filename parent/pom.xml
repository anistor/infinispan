<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.infinispan</groupId>
   <parent>
    <artifactId>jboss-parent</artifactId>
    <groupId>org.jboss</groupId>
    <version>10-redhat-2</version>
  </parent>
   <artifactId>infinispan-parent</artifactId>
   <version>5.2.6.Final-redhat-1</version>
   <packaging>pom</packaging>
   <name>Infinispan Common Parent</name>
   <description>Infinispan common parent POM module</description>
   <licenses>
      <license>
         <name>GNU Lesser General Public License</name>
         <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
         <distribution>repo</distribution>
      </license>
   </licenses>
   <developers>
      <developer>
         <id>placeholder</id>
         <name>See http://www.infinispan.org for a complete list of contributors</name>
      </developer>
   </developers>
   <properties>
      <buildDirectory>target</buildDirectory>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
      <testNGListener>org.infinispan.test.fwk.UnitTestTestNGListener</testNGListener>
      <infinispan.test.parallel.threads>20</infinispan.test.parallel.threads>
      <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
      <jboss.releases.repo.url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</jboss.releases.repo.url>
      <jboss.snapshots.repo.url>https://repository.jboss.org/nexus/content/repositories/snapshots/</jboss.snapshots.repo.url>
      <packaging>jar</packaging>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
      <module.metadata.isCoreModule>false</module.metadata.isCoreModule>
      
      <reportTitle>Infinispan JaCoCo Report</reportTitle>
      <dir.ispn>../</dir.ispn>
      <dir.report>../jacoco-html</dir.report>
   </properties>
   
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.jboss.component.management</groupId>
            <artifactId>jboss-dependency-management-all</artifactId>
            <version>6.1.0-redhat-2</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
      </dependencies>
   </dependencyManagement>
   <dependencies>
      
      <dependency>
         <groupId>com.thoughtworks.xstream</groupId>
         <artifactId>xstream</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>net.jcip</groupId>
         <artifactId>jcip-annotations</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-all</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging-processor</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <directory>${buildDirectory}</directory>
      <finalName>${project.artifactId}</finalName>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.antlr</groupId>
               <artifactId>antlr3-maven-plugin</artifactId>
               <executions>
                 <execution>
                     <goals>
                         <goal>antlr</goal>
                     </goals>
                 </execution>
             </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-help-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-pmd-plugin</artifactId>
               <configuration>
            <minimumTokens>100</minimumTokens>
            <targetJdk>1.6</targetJdk>
            <linkXref>false</linkXref>
            <sourceEncoding>utf-8</sourceEncoding>
          </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
            <attachClasses>false</attachClasses>
          </configuration>
            </plugin>
            <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
            </plugin>
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.0,)</versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>javadoc</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <versionRange>[1.2.1,)</versionRange>
                    <goals>
                      <goal>java</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <versionRange>[2.15.2,)</versionRange>
                    <goals>
                      <goal>testCompile</goal>
                      <goal>compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>ideauidesigner-maven-plugin</artifactId>
                    <versionRange>[1.0-beta-1,)</versionRange>
                    <goals>
                      <goal>javac2</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
            </plugin>
            <plugin>
               <groupId>org.jacoco</groupId>
               <artifactId>jacoco-maven-plugin</artifactId>
               <configuration>
            <includes>
              <include>org.infinispan.*</include>
            </includes>
          </configuration>
            </plugin>
            
            
            
            
            
            
            
            
            
            
            
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
         </plugin>
         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
               <instructions>
                  <Bundle-DocURL>http://www.infinispan.org/</Bundle-DocURL>
                  <Export-Package>${project.groupId}.*;version=${project.version};-split-package:=error</Export-Package>
               </instructions>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy_serialized_metadata</id>
                  <phase>process-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <skip>${module.skipComponentMetaDataProcessing}</skip>
                     <target>
                        <copy file="${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat" todir="${project.build.outputDirectory}" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
               <compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
               <downloadSources>true</downloadSources>
               <buildOutputDirectory>${basedir}/eclipse-output</buildOutputDirectory>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-idea-plugin</artifactId>
            <configuration>
               <downloadSources>true</downloadSources>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <id>build-test-jar</id>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                           <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                     </archive>
                     <excludes>
                        <excludes>**/jbossts-properties.xml</excludes>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
            <configuration>
               <archive>
                  <manifest>
                     <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                     <mainClass>org.infinispan.Version</mainClass>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/log4j.xml</exclude>
                  <exclude>**/*.bat</exclude>
                  <exclude>**/*.sh</exclude>
                  <exclude>**/*.txt</exclude>
               </excludes>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <parallel>tests</parallel>
               <threadCount>${infinispan.test.parallel.threads}</threadCount>
               <forkMode>none</forkMode>
               <groups>${defaultTestGroup}</groups>
               <systemProperties>
            <property>
              <name>infinispan.test.jgroups.protocol</name>
              <value>${infinispan.test.jgroups.protocol}</value>
            </property>
            <property>
              <name>jgroups.bind_addr</name>
              <value>127.0.0.1</value>
            </property>
            <property>
              <name>java.net.preferIPv4Stack</name>
              <value>true</value>
            </property>
            <property>
              <name>infinispan.unsafe.allow_jdk8_chm</name>
              <value>true</value>
            </property>
          </systemProperties>
               <trimStackTrace>false</trimStackTrace>
               <properties>
            <property>
              <name>listener</name>
              <value>${testNGListener}</value>
            </property>
          </properties>
               <argLine>-Xmx1024m -XX:MaxPermSize=1024m</argLine>
               
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
          <execution>
            <id>serialize_component_metadata</id>
            <phase>process-classes</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <skip>${module.skipComponentMetaDataProcessing}</skip>
              <mainClass>org.infinispan.factories.components.ComponentMetadataPersister</mainClass>
              <arguments>
                <argument>${project.build.outputDirectory}</argument>
                <argument>${basedir}/src/main/resources/${project.artifactId}-component-metadata.dat</argument>
              </arguments>
              <systemProperties>
                <systemProperty>
                  <key>infinispan.isCoreModule</key>
                  <value>${module.metadata.isCoreModule}</value>
                </systemProperty>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
         </plugin>
         
         
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>distribution</id>
         <properties>
            <skipTests>true</skipTests>
         </properties>

         <build>
            <plugins>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>create-classpath</id>
                        <phase>package</phase>
                        <goals>
                           <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                           <includeScope>runtime</includeScope>
                           <excludeScope>test</excludeScope>
                           <prefix>$ISPN_HOME/lib</prefix>
                           <outputFile>${project.build.directory}/runtime-classpath.txt</outputFile>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>extras</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-enforcer-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>enforce-java</id>
                        <goals>
                           <goal>enforce</goal>
                        </goals>
                        <configuration>
                           <rules>
                              <requireJavaVersion>
                                 <version>[1.6,)</version>
                              </requireJavaVersion>
                              <requireMavenVersion>
                                 <version>[2.1.0,)</version>
                              </requireMavenVersion>
                           </rules>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-source-plugin</artifactId>
                  <executions>
                     <execution>
                        <id>attach-sources</id>
                        <goals>
                           <goal>jar</goal>
                           <goal>test-jar</goal>
                        </goals>
                     </execution>
                  </executions>
                  <inherited>true</inherited>
               </plugin>
            </plugins>
         </build>
         <properties>
            
            <packaging>bundle</packaging>
         </properties>
      </profile>
      <profile>
         <id>test-hudson</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <properties>
            <defaultTestGroup>functional,unit,arquillian</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-functional</id>
         <properties>
            <defaultTestGroup>functional</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-xsite</id>
         <properties>
            <defaultTestGroup>xsite</defaultTestGroup>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>test-unit</id>
         <properties>
            <defaultTestGroup>unit</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-jgroups</id>
         <properties>
            <defaultTestGroup>jgroups</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>test-transaction</id>
         <properties>
            <defaultTestGroup>transaction</defaultTestGroup>
         </properties>
      </profile>
      <profile>
         <id>debug-tests</id>
         <properties>
            <testNGListener>org.infinispan.test.fwk.DebuggingUnitTestNGListener</testNGListener>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         
         <id>useOlderLuceneVersion</id>
         <activation>
         </activation>
         <properties>
            <version.lucene>2.9.4</version.lucene>
         </properties>
      </profile>
      <profile>
         <id>nonParallel</id>
         <activation>
         </activation>
         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>
      <profile>
         <id>traceTests</id>
         <activation>
         </activation>
         <build>
            <plugins>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <forkMode>none</forkMode>
                     <groups>${defaultTestGroup}</groups>
                     <systemProperties>
                        <property>
                           <name>infinispan.test.jgroups.protocol</name>
                           <value>${infinispan.test.jgroups.protocol}</value>
                        </property>
                        <property>
                           <name>jgroups.bind_addr</name>
                           <value>127.0.0.1</value>
                        </property>
                        <property>
                           <name>java.net.preferIPv4Stack</name>
                           <value>true</value>
                        </property>
                        <property>
                           <name>log4j.configuration</name>
                           <value>log4j-trace.xml</value>
                        </property>
                     </systemProperties>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                     <argLine>-Xmx1024m -XX:MaxPermSize=1024m</argLine>
                  </configuration>
               </plugin>
            </plugins>
         </build>
         <properties>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>
      </profile>

      <profile>
         <id>coverage</id>

         <activation>
         </activation>

         <properties>
            <infinispan.test.parallel.threads>1</infinispan.test.parallel.threads>
            <infinispan.test.jgroups.protocol>tcp</infinispan.test.jgroups.protocol>
         </properties>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <executions>
                     
                     <execution>
                        <id>jacoco-dependency-ant</id>
                        <goals>
                           <goal>copy</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <inherited>false</inherited>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.ant</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.core</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>org.jacoco</groupId>
                                 <artifactId>org.jacoco.report</artifactId>
                                 <version>${version.jacoco}</version>
                              </artifactItem>
                              <artifactItem>
                                 <groupId>asm</groupId>
                                 <artifactId>asm-all</artifactId>
                                 <version>${version.asm}</version>
                              </artifactItem>
                           </artifactItems>
                           <stripVersion>true</stripVersion>
                           <outputDirectory>${basedir}/target/jacoco-jars</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

               
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <executions>
                     <execution>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                  </executions>
                  <configuration>
                     <propertyName>jacocoAgent</propertyName>
                  </configuration>
               </plugin>

               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration combine.self="override">
                     <argLine>-Xmx1024m -XX:MaxPermSize=1024m ${jacocoAgent}</argLine>
                     <parallel>tests</parallel>
                     <threadCount>${infinispan.test.parallel.threads}</threadCount>
                     <groups>${defaultTestGroup}</groups>
                     <systemProperties>
                        <property>
                           <name>infinispan.test.jgroups.protocol</name>
                           <value>${infinispan.test.jgroups.protocol}</value>
                        </property>
                        <property>
                           <name>jgroups.bind_addr</name>
                           <value>127.0.0.1</value>
                        </property>
                        <property>
                           <name>java.net.preferIPv4Stack</name>
                           <value>true</value>
                        </property>
                        <property>
                           <name>infinispan.unsafe.allow_jdk8_chm</name>
                           <value>true</value>
                        </property>
                     </systemProperties>
                     <trimStackTrace>false</trimStackTrace>
                     <properties>
                        <property>
                           <name>listener</name>
                           <value>${testNGListener}</value>
                        </property>
                     </properties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>jacocoReport</id>

         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>install</phase>
                        <goals>
                           <goal>run</goal>
                        </goals>
                        <configuration combine.self="override">
                           <target>
                              
                              <taskdef classname="org.jacoco.ant.ReportTask" name="report">
                                 <classpath path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.core.jar" />
                                 <classpath path="target/jacoco-jars/org.jacoco.report.jar" />
                                 <classpath path="target/jacoco-jars/asm-all.jar" />
                              </taskdef>

                              <echo message="Deleting previous report" />
                              <delete dir="${dir.report}" />

                              <echo message="Creating report directory" />
                              <mkdir dir="${dir.report}" />

                              <echo message="Generating JaCoCo Reports" />
                              <report>
                                 
                                 <executiondata>
                                    <fileset dir="${dir.ispn}" includes="**/target/jacoco.exec" />
                                 </executiondata>

                                 
                                 <structure name="${reportTitle}">
                                    <classfiles>
                                       <fileset dir="${dir.ispn}">
                                          <include name="**/target/classes/" />
                                       </fileset>
                                    </classfiles>
                                    <sourcefiles encoding="UTF-8">
                                       <mappedresources>
                                          <fileset dir="${dir.ispn}" includes="**/src/main/java/**/*.java" />
                                          <mapper from="^(.*/java/)(.*)$" to="\2" type="regexp" />
                                       </mappedresources>
                                    </sourcefiles>

                                 </structure>

                                 
                                 <html destdir="${dir.report}" />
                              </report>
                           </target>
                        </configuration>
                     </execution>
                  </executions>
                  <dependencies>
                     <dependency>
                        <groupId>org.jacoco</groupId>
                        <artifactId>org.jacoco.ant</artifactId>
                        <version>${version.jacoco}</version>
                     </dependency>
                  </dependencies>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <id>32bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>32</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                        </jvmArgs>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>

      <profile>
         <id>64bitstuff</id>
         <activation>
            <property>
               <name>sun.arch.data.model</name>
               <value>64</value>
            </property>
         </activation>
         <build>
            <pluginManagement>
               <plugins>
                  <plugin>
                     <groupId>org.scala-tools</groupId>
                     <artifactId>maven-scala-plugin</artifactId>
                     <executions>
                        <execution>
                           <id>compile</id>
                           <phase>compile</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <id>test-compile</id>
                           <phase>test-compile</phase>
                           <goals>
                              <goal>testCompile</goal>
                           </goals>
                        </execution>
                        <execution>
                           <phase>process-resources</phase>
                           <goals>
                              <goal>compile</goal>
                           </goals>
                        </execution>
                     </executions>
                     <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                        <jvmArgs>
                           <jvmArg>-Xmx256m</jvmArg>
                           <jvmArg>-XX:+UseCompressedOops</jvmArg>
                        </jvmArgs>
                     </configuration>
                  </plugin>
               </plugins>
            </pluginManagement>
         </build>
      </profile>

   </profiles>
<!-- Modified by POM Artifact-Version Manipulator version 1.2.4-redhat-1-eap (722ee63) -->
</project>
